{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","tableBody","rowsList","querySelectorAll","cellsList","formatContent","text","replace","addEventListener","eventClick","cellIndex","findIndex","cell","innerText","target","sort","firstRow","secondRow","firstCell","children","secondCell","isNaN","localeCompare","append"],"mappings":";AAAA,aAWA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EATA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SACnCE,EAAeD,EAAAA,EAAUE,iBAAiB,OAC1CC,EAAgBN,EAAAA,EAAUK,iBAAiB,OAEjD,SAASE,EAAcC,GACd,OAACA,EAAKC,QAAQ,QAAS,IAGhCT,EAAUU,iBAAiB,QAAS,SAACC,GAC7BC,IAAAA,EAAYN,EACfO,UAAU,SAAAC,GACTA,OAAAA,EAAKC,YAAcJ,EAAWK,OAAOD,YAGzCX,EAASa,KAAK,SAACC,EAAUC,GACjBC,IAAAA,EAAYF,EAASG,SAAST,GAAWG,UACzCO,EAAaH,EAAUE,SAAST,GAAWG,UAE7CQ,OAAAA,MAAMhB,EAAca,IACfA,EAAUI,cAAcF,GAEvBf,EAAca,GAAab,EAAce,KAIrDnB,EAAUsB,OAAVtB,MAAAA,EAAoBC,EAAAA","file":"main.928f894b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst tableHead = document.querySelector('thead');\r\nconst tableBody = document.querySelector('tbody');\r\nconst rowsList = [...tableBody.querySelectorAll('tr')];\r\nconst cellsList = [...tableHead.querySelectorAll('th')];\r\n\r\nfunction formatContent(text) {\r\n  return +text.replace(/[$,]/g, '');\r\n}\r\n\r\ntableHead.addEventListener('click', (eventClick) => {\r\n  const cellIndex = cellsList\r\n    .findIndex(cell => (\r\n      cell.innerText === eventClick.target.innerText\r\n    ));\r\n\r\n  rowsList.sort((firstRow, secondRow) => {\r\n    const firstCell = firstRow.children[cellIndex].innerText;\r\n    const secondCell = secondRow.children[cellIndex].innerText;\r\n\r\n    if (isNaN(formatContent(firstCell))) {\r\n      return firstCell.localeCompare(secondCell);\r\n    } else {\r\n      return (formatContent(firstCell) - formatContent(secondCell));\r\n    }\r\n  });\r\n\r\n  tableBody.append(...rowsList);\r\n});\r\n"]}